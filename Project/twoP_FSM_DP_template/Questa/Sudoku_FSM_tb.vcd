$date
	Mon Mar 25 02:03:54 2024
$end
$version
	QuestaSim Version 2023.2
$end
$timescale
	1ns
$end

$scope module Sudoku_FSM_tb $end
$var reg 1 ! in_clka $end
$var reg 1 " in_clkb $end
$var reg 1 # in_restart $end
$var reg 1 $ in_enter $end
$var reg 1 % in_solved $end
$var reg 2 & in_difficulty [1:0] $end
$var wire 1 ' out_won $end
$var wire 1 ( out_dp_check $end
$var wire 1 ) out_set_board $end
$var wire 1 * out_ridx_a $end
$var wire 1 + out_ridx_b $end
$var wire 1 , out_state [3] $end
$var wire 1 - out_state [2] $end
$var wire 1 . out_state [1] $end
$var wire 1 / out_state [0] $end
$var wire 1 0 out_fill_flag [15] $end
$var wire 1 1 out_fill_flag [14] $end
$var wire 1 2 out_fill_flag [13] $end
$var wire 1 3 out_fill_flag [12] $end
$var wire 1 4 out_fill_flag [11] $end
$var wire 1 5 out_fill_flag [10] $end
$var wire 1 6 out_fill_flag [9] $end
$var wire 1 7 out_fill_flag [8] $end
$var wire 1 8 out_fill_flag [7] $end
$var wire 1 9 out_fill_flag [6] $end
$var wire 1 : out_fill_flag [5] $end
$var wire 1 ; out_fill_flag [4] $end
$var wire 1 < out_fill_flag [3] $end
$var wire 1 = out_fill_flag [2] $end
$var wire 1 > out_fill_flag [1] $end
$var wire 1 ? out_fill_flag [0] $end

$scope module U1 $end
$var parameter 32 @ SIZE $end
$var parameter 2 A easy_mode $end
$var parameter 2 B medium_mode $end
$var parameter 2 C hard_mode $end
$var parameter 4 D IDLE $end
$var parameter 4 E EMPTY $end
$var parameter 4 F SET_DIFF $end
$var parameter 4 G EASY $end
$var parameter 4 H MEDIUM $end
$var parameter 4 I HARD $end
$var parameter 4 J REG_INP $end
$var parameter 4 K GUESS $end
$var parameter 4 L CHECK $end
$var parameter 4 M WRONG $end
$var parameter 4 N FIN $end
$var wire 1 O clka $end
$var wire 1 P clkb $end
$var wire 1 Q restart $end
$var wire 1 R enter $end
$var wire 1 S solved $end
$var wire 1 T difficulty [1] $end
$var wire 1 U difficulty [0] $end
$var reg 1 V won $end
$var reg 1 W dp_check $end
$var reg 1 X set_board $end
$var reg 1 Y ridx_a $end
$var reg 1 Z ridx_b $end
$var reg 4 [ state [3:0] $end
$var reg 16 \ fill_flag [15:0] $end
$var wire 1 ] temp_state [3] $end
$var wire 1 ^ temp_state [2] $end
$var wire 1 _ temp_state [1] $end
$var wire 1 ` temp_state [0] $end
$var reg 4 a next_state [3:0] $end

$scope function fsm_function $end
$var reg 4 b fsm_function [3:0] $end
$var reg 4 c state [3:0] $end
$var reg 1 d enter $end
$var reg 1 e solved $end
$var reg 2 f difficulty [1:0] $end
$upscope $end

$scope begin FSM_SEQ $end
$upscope $end

$scope begin OUTPUT_LOGIC $end
